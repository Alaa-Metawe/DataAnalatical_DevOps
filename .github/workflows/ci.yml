name: Terraform CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  terraform:
    name: Terraform CI
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: eu-west-1 
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform fmt
        run: terraform fmt -recursive
      
      # ----------------------------------------------------
      # Step 1: Bootstrap the S3 backend bucket
      # ----------------------------------------------------
      - name: Terraform init (bootstrap-backend)
        run: terraform init
        working-directory: bootstrap-backend/

      - name: Terraform apply (bootstrap-backend)
        run: terraform apply -auto-approve
        working-directory: bootstrap-backend/

      # ----------------------------------------------------
      # Step 2: Get the bucket name and configure the backend for 'infra'
      # ----------------------------------------------------
      - name: Get S3 state bucket name
        id: get_bucket
        working-directory: bootstrap-backend/
        run: echo "TF_STATE_BUCKET=$(terraform output -raw tf_state_bucket)" >> "$GITHUB_OUTPUT"

      - name: Dynamically create backend.tf for 'infra'
        run: |
          cat << EOF > infra/backend.tf
          terraform {
            backend "s3" {
              bucket = "${{ steps.get_bucket.outputs.TF_STATE_BUCKET }}"
              key    = "infra/terraform.tfstate"
              region = "${{ env.AWS_REGION }}"
              encrypt = true
            }
          }
          EOF

      # ----------------------------------------------------
      # Step 3: Run Terraform for the main 'infra' directory
      # ----------------------------------------------------
      - name: Terraform init (infra)
        run: terraform init -reconfigure
        working-directory: infra/

      - name: Terraform validate (infra)
        run: terraform validate
        working-directory: infra/

      - name: Terraform plan (infra)
        run: terraform plan -input=false
        working-directory: infra/
        
      - name: Terraform init (infra) for destroy
        run: terraform init -reconfigure
        working-directory: infra/

      - name: Terraform destroy (infra)
        run: terraform destroy -auto-approve
        working-directory: infra/

      - name: Terraform destroy (bootstrap-backend)
        run: terraform destroy -auto-approve
        working-directory: bootstrap-backend/
